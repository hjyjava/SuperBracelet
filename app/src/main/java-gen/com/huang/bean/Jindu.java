package com.huang.bean;

import com.huang.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.huang.dao.JinduDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "Jindu".
 */
public class Jindu {

    private Long id;
    private String studentId;
    private String childSubjectId;
    private String addtime;
    private String grade;
    private String num;
    private String rank;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient JinduDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Jindu() {
    }

    public Jindu(Long id) {
        this.id = id;
    }

    public Jindu(Long id, String studentId, String childSubjectId, String addtime, String grade, String num, String rank) {
        this.id = id;
        this.studentId = studentId;
        this.childSubjectId = childSubjectId;
        this.addtime = addtime;
        this.grade = grade;
        this.num = num;
        this.rank = rank;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getJinduDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getStudentId() {
        return studentId;
    }

    public void setStudentId(String studentId) {
        this.studentId = studentId;
    }

    public String getChildSubjectId() {
        return childSubjectId;
    }

    public void setChildSubjectId(String childSubjectId) {
        this.childSubjectId = childSubjectId;
    }

    public String getAddtime() {
        return addtime;
    }

    public void setAddtime(String addtime) {
        this.addtime = addtime;
    }

    public String getGrade() {
        return grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }

    public String getNum() {
        return num;
    }

    public void setNum(String num) {
        this.num = num;
    }

    public String getRank() {
        return rank;
    }

    public void setRank(String rank) {
        this.rank = rank;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
